output$gene
chr1_genes <- chr1_genes[match(output$gene, chr1_genes$ensembl_gene_id), ]
output$gene.name = chr1_genes$ensembl_gene_id
View(output)
output$gene.name = chr1_genes$hgnc_symbol
counts["ENSG00000159216", ]
plot(counts["ENSG00000159216", ], gt$"rs75828127:22789435:C:T")
counts["ENSG00000159216", ]
gt$"rs75828127:22789435:C:T"
gt$rs2830051
plot(x=as.numeric(as.character(counts["ENSG00000154654", ])), as.numeric(as.character(gt$rs2830051)))
plot(x=as.numeric(as.numeric(as.character(gt$rs2830051)), as.character(counts["ENSG00000154654", ])))
f5_genes = read.table("/home/kgoldmann/NAS/GCPEAC/Sharmila/Fantom_5/fantom5 modules v4.csv")
f5_genes = read.table("/home/kgoldmann/NAS/GCPEAC/Sharmila/Fantom_5/fantom5 modules v4.csv", header=T)
f5_genes = read.csv2("/home/kgoldmann/NAS/GCPEAC/Sharmila/Fantom_5/fantom5 modules v4.csv")
View(f5_genes)
f5_genes = read.csv2("/home/kgoldmann/NAS/GCPEAC/Sharmila/Fantom_5/fantom5 modules v4.csv", sep=",")
B_Cells = f5_genes[f5_genes$celltype == "CD19+ B Cells", ]
B_Cells = f5_genes$gene[f5_genes$celltype == "CD19+ B Cells"]
B_Cells
B_Cells = as.character(f5_genes$gene[f5_genes$celltype == "CD19+ B Cells"])
B_cells
B_Cells = as.character(f5_genes$gene[f5_genes$celltype == "CD19+ B Cells"])
B_Cells
B_Cells %in% output$gene.name
chr1_genes <- getBM(attributes=c('ensembl_gene_id', 'ensembl_transcript_id','hgnc_symbol'), values =B_Cells, mart = ensembl)
View(chr1_genes)
bcs = chr1_genes
View(bcs)
bcs <- bcs[match(B_Cells, bcs$hgnc_symbol), ]
View(bcs)
bcs <- getBM(attributes=c('ensembl_gene_id', 'ensembl_transcript_id','hgnc_symbol', "chromosome_name", "start_position", "end_position"), values =B_Cells, mart = ensembl)
bcs <- bcs[match(B_Cells, bcs$hgnc_symbol), ]
unique(bcs$chromosome_name)
knitr::opts_chunk$set(echo = TRUE)
library(snpStats)
library(VariantAnnotation)
fl = "/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/PEAC_chr22_4PCA.vcf.gz"
vcf = readVcf(fl)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt)
View(out)
summary(out$z.HWE)
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
ncol(gt)
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
HWEuse
out2 = out[HWEuse, ]
View(out2)
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/")
fl
fl = fl[grepl("PEAC*_4PCA.vcf.gz", fl)]
fl
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/")
fl = fl[grepl("PEAC*_4PCA.vcf.gz", fl)]
fl
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/")
fl = fl[grepl("_4PCA.vcf.gz", fl)]
fl
fl = fl[! grepl(".tbi", fl)]
file=fl[1]
vcf = readVcf(file)
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/", full.names = TRUE)
fl = fl[grepl("_4PCA.vcf.gz", fl)]
file = fl[1]
vcf = readVcf(file)
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
g
gt = res$genotypes
HW_test = function(file){
print(gsub("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/|_4PCA.vcf.gz", "", file))
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt) # Find the HW z values
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
out2 = out[HWEuse, ]
}
fin = lapply(fl, HW_test())
fin = lapply(fl, function(x) HW_test(x))
fl
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/", full.names = TRUE)
fl = fl[grepl("_4PCA.vcf.gz", fl)]
fl = fl[! grepl("tbi", fl)]
fl
HW_test = function(file){
print(gsub("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/PEAC_|_4PCA.vcf.gz", "", file))
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt) # Find the HW z values
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
out2 = out[HWEuse, ]
}
HW_test = function(file){
print(gsub("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA//PEAC_|_4PCA.vcf.gz", "", file))
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt) # Find the HW z values
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
out2 = out[HWEuse, ]
}
fin = lapply(fl, function(x) HW_test(x))
fin[[1]]
rownames(fin[[1]])
HW_test = function(file){
chr = gsub("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA//PEAC_|_4PCA.vcf.gz", "", file)
print(chr)
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt) # Find the HW z values
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
out2 = out[HWEuse, ]
write.table(paste0("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/HW_keep_", chr, ".txt"), sep=",", quote=FALSE, col.names = FALSE, row.names = FALSE)
}
fin = lapply(fl, function(x) HW_test(x))
HW_test = function(file){
chr = gsub("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA//PEAC_|_4PCA.vcf.gz", "", file)
print(chr)
vcf = readVcf(file)
res <- genotypeToSnpMatrix(vcf)
gt = res$genotypes
out = col.summary(gt) # Find the HW z values
hardy <- 10^-6      # HWE cut-off
HWEuse <- with(out, !is.na(z.HWE) & ( abs(z.HWE) < abs( qnorm(hardy/2) ) ) )
HWEuse[is.na(HWEuse)] <- FALSE          # Remove NA's as well
cat(ncol(gt)-sum(HWEuse),"SNPs will be removed due to high HWE.\n")
cat(sum(HWEuse),"SNPs will be kept.\n")
out2 = out[HWEuse, ]
write.table(rownames(out2), file=paste0("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/HW_keep_", chr, ".txt"), sep=",", quote=FALSE, col.names = FALSE, row.names = FALSE)
}
fin = lapply(fl, function(x) HW_test(x))
fl = list.files("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/DNA/", full.names = TRUE)
fl
# Curate the fastq files
#<SampleID..QMUL.or.Genentech.> <unique_individual_id=HospitalNumber><ID in vcf=SampleID..QMUL.ID.only.><Batch><Reads><Timepoint><Tissue><Diagnosis><GenotypeDir><fastq1.R1_path> <fastq1.R2_path> <fastq2.R1_path> <fastq2.R2_path>.
x <- '/home/kgoldmann/Documents/PEAC_eqtl/Data/FASTQ'
x <- '/home/kgoldmann/NAS/RNASEQ/PEAC_RawData/'
x <- '/mnt/volume1'
y <- '/home/kgoldmann/NAS/GCPEAC/Katriona/PEAC_sampleinfo.csv'
files = list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files), "_"), "[[", 1)) #gsub(".*\\_", "", ))
samp[grepl("LIB", samp)] = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("LIB", samp)]), "_"), "[[", 2))
temp = data.frame("files" = files, "sample"=samp, "read" = gsub(".*\\/|.*\\_|.fastq.gz", "", files))
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp$read = droplevels(temp$read)
#rownames(temp) = make.names(temp$sample, unique=T)
meta = read.csv(y)
meta$SampleID..QMUL.ID.only. = gsub("b", "", meta$SampleID..QMUL.ID.only.)
bind.df = meta[,c("HospitalNumber", "SampleID..QMUL.or.Genentech.", "SampleID..QMUL.ID.only.",
"Batch", "Timepoint", "Tissue", "Diagnosis" )]
temp1 = temp[temp$read == "R1", ]
temp2 = temp[temp$read == "R2", ]
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
View(output.df)
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_path", "fastq2.R2_path")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$SampleID..QMUL.or.Genentech. != "SAM24297983", ]
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_path", "fastq2.R2_path")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
#output.df$GenotypeDir = gsub("/[^/]+$", "", output.df$GenotypeDir)
#output.df$read = gsub("R", "", output.df$read)
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_path", "fastq2.R2_path")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$Reads != "Single", ]
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
x <- '/mnt/volume1'
y <- '/home/kgoldmann/NAS/GCPEAC/Katriona/PEAC_sampleinfo.csv'
files = list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files), "_"), "[[", 1)) #gsub(".*\\_", "", ))
samp[grepl("LIB", samp)] = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("LIB", samp)]), "_"), "[[", 2))
temp = data.frame("files" = files, "sample"=samp, "read" = gsub(".*\\/|.*\\_|.fastq.gz", "", files))
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp$read = droplevels(temp$read)
#rownames(temp) = make.names(temp$sample, unique=T)
meta = read.csv(y)
meta$SampleID..QMUL.ID.only. = gsub("b", "", meta$SampleID..QMUL.ID.only.)
bind.df = meta[,c("HospitalNumber", "SampleID..QMUL.or.Genentech.", "SampleID..QMUL.ID.only.",
"Batch", "Timepoint", "Tissue", "Diagnosis" )]
temp1 = temp[temp$read == "R1", ]
temp2 = temp[temp$read == "R2", ]
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_path", "fastq2.R2_path")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$Reads != "Single", ]
View(output.df)
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
x <- '/mnt/volume1'
y <- '/home/kgoldmann/NAS/GCPEAC/Katriona/PEAC_sampleinfo.csv'
files = list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files), "_"), "[[", 1)) #gsub(".*\\_", "", ))
samp[grepl("LIB", samp)] = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("LIB", samp)]), "_"), "[[", 2))
temp = data.frame("files" = files, "sample"=samp, "read" = gsub(".*\\/|.*\\_|.fastq.gz", "", files))
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp$read = droplevels(temp$read)
#rownames(temp) = make.names(temp$sample, unique=T)
meta = read.csv(y)
meta$SampleID..QMUL.ID.only. = gsub("b", "", meta$SampleID..QMUL.ID.only.)
bind.df = meta[,c("HospitalNumber", "SampleID..QMUL.or.Genentech.", "SampleID..QMUL.ID.only.",
"Batch", "Timepoint", "Tissue", "Diagnosis" )]
temp1 = temp[temp$read == "R1", ]
temp2 = temp[temp$read == "R2", ]
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
output.df$Reads =NA
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
View(output.df)
output.df = output.df[output.df$Batch != "Ambry", ]
write.table(output.df$SampleID..QMUL.or.Genentech., "/home/kgoldmann/Documents/PEAC_eqtl/Data/samples.txt", row.names=FALSE, col.names = FALSE, quote=FALSE, sep="," )
# Curate the fastq files
#<SampleID..QMUL.or.Genentech.> <unique_individual_id=HospitalNumber><ID in vcf=SampleID..QMUL.ID.only.><Batch><Reads><Timepoint><Tissue><Diagnosis><GenotypeDir><fastq1.R1_path> <fastq1.R2_path> <fastq2.R1_path> <fastq2.R2_path>.
x <- '/home/kgoldmann/Documents/PEAC_eqtl/Data/FASTQ'
x <- '/home/kgoldmann/NAS/RNASEQ/PEAC_RawData/'
x <- '~/samples.txt'
y <- '/home/kgoldmann/NAS/GCPEAC/Katriona/PEAC_sampleinfo.csv'
files = read.table(x) #list.files(x, full.names = TRUE, recursive=TRUE)
View(files)
files = files[grepl(".fastq\\.", files)]
samp = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files), "_"), "[[", 1)) #gsub(".*\\_", "", ))
samp
files
files = read.table(x) #list.files(x, full.names = TRUE, recursive=TRUE)
files
files = read.table(x)[, 1] #list.files(x, full.names = TRUE, recursive=TRUE)
files = as.character(read.table(x)[, 1]) #list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = unlist(lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files), "_"), "[[", 1)) #gsub(".*\\_", "", ))
samp
files = as.character(read.table(x)[, 1]) #list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = rep(NA, length(files))
strsplit(gsub(".*\\/|_[^_]+$", "", files), "_")
strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch1", files)]), "_")
samp = rep(NA, length(files))
samp[grepl("GenentechBatch1", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch1", files)]), "_"), "[[", 2)
samp
strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch2", files)]), "_")
samp[grepl("GenentechBatch2", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch2", files)]), "_"), "[[", 1)
samp[grepl("GenentechBatch3", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch3", files)]), "_"), "[[", 1)
strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch3", files)]), "_")
files = as.character(read.table(x)[, 1]) #list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = rep(NA, length(files))
samp[grepl("GenentechBatch1", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch1", files)]), "_"), "[[", 2)
samp[grepl("GenentechBatch2", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch2", files)]), "_"), "[[", 1)
samp[grepl("GenentechBatch3", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch3", files)]), "_"), "[[", 1)
samp
samp = unlist(samp)
samp
files[1:80]
gsub(".*\\/|_[^_]+$", "", files[grepl("Ambry", files)]), "_")
strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("Ambry", files)]), "_")
strsplit(gsub(".*\\/|[^_]+$", "", files[grepl("Ambry", files)]), "_")
gsub(".*\\/|[^_]+$", "", files[grepl("Ambry", files)])
files[grepl("Ambry", files)]
strsplit(files[grepl("Ambry", files)], "/")
lapply(strsplit(files[grepl("Ambry", files)], "/"), "[[", 9)
files = as.character(read.table(x)[, 1]) #list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = rep(NA, length(files))
samp[grepl("Ambry", files)] = lapply(strsplit(files[grepl("Ambry", files)], "/"), "[[", 9)
samp[grepl("GenentechBatch1", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch1", files)]), "_"), "[[", 2)
samp[grepl("GenentechBatch2", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch2", files)]), "_"), "[[", 1)
samp[grepl("GenentechBatch3", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch3", files)]), "_"), "[[", 1)
samp = unlist(samp)
samp
temp = data.frame("files" = files, "sample"=samp, "read" = gsub(".*\\/|.*\\_|.fastq.gz", "", files))
View(temp)
files[grepl("Ambry", files)]
strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)])
, "/")
strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "_")
reads = rep(NA, length(files))
reads[grepl("Ambry", files)] = lapply(strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "_"), "[[", 5)
strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "_")
reads[grepl("Ambry", files)] = lapply(strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "_"), "[[", 5)
strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "_")
gsub(".*L00", "", files[grepl("Ambry", files)])
strsplit(gsub(".*L00", "", files[grepl("Ambry", files)]), "_")
gsub(".fastq.gz", "", lapply(strsplit(gsub(".*L00", "", files[grepl("Ambry", files)]), "_"), "[[", 2))
reads = rep(NA, length(files))
reads[grepl("Ambry", files)] = gsub(".fastq.gz", "", lapply(strsplit(gsub(".*L00", "", files[grepl("Ambry", files)]), "_"), "[[", 2))
files[grepl("GenentechBatch1", files)]
gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch1", files)])
files[grepl("GenentechBatch2", files)]
reads[grepl("GenentechBatch2", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch2", files)])
reads[grepl("GenentechBatch1", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch1", files)])
reads[grepl("GenentechBatch2", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch2", files)])
gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch3", files)])
reads[grepl("GenentechBatch3", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch3", files)])
reads = unlist(reads)
reads
temp = data.frame("files" = files, "sample"=samp, "read" = gsub(".*\\/|.*\\_|.fastq.gz", "", files))
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp = data.frame("files" = files, "sample"=samp, "read" = reads)
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp$read = droplevels(temp$read)
#rownames(temp) = make.names(temp$sample, unique=T)
meta = read.csv(y)
meta$SampleID..QMUL.ID.only. = gsub("b", "", meta$SampleID..QMUL.ID.only.)
bind.df = meta[,c("HospitalNumber", "SampleID..QMUL.or.Genentech.", "SampleID..QMUL.ID.only.",
"Batch", "Timepoint", "Tissue", "Diagnosis" )]
temp1 = temp[temp$read == "R1", ]
temp2 = temp[temp$read == "R2", ]
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
View(output.df)
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
output.df$fastq1.R1_path[is.na(output.df$fastq1.R1_path)] = temp1$file[match(output.df$SampleID..QMUL.ID.only.[is.na(output.df$fastq1.R1_path)], temp1$sample)]
output.df$fastq1.R2_path[is.na(output.df$fastq1.R2_path)] = temp2$file[match(output.df$SampleID..QMUL.ID.only.[is.na(output.df$fastq1.R2_path)], temp2$sample)]
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_path", "fastq2.R2_path")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[output.df$Batch != "Ambry", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$Reads != "Single", ]
#write.table(output.df$SampleID..QMUL.or.Genentech., "/home/kgoldmann/Documents/PEAC_eqtl/Data/samples.txt", row.names=FALSE, col.names = FALSE, quote=FALSE, sep="," )
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
output.df$fastq2.R1_command = paste0("scp cam:", output.df$fastq1.R1_path, "./")
output.df$fastq2.R2_command = paste0("scp cam:", output.df$fastq1.R2_path, "./")
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_command", "fastq2.R2_command")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[output.df$Batch != "Ambry", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$Reads != "Single", ]
#write.table(output.df$SampleID..QMUL.or.Genentech., "/home/kgoldmann/Documents/PEAC_eqtl/Data/samples.txt", row.names=FALSE, col.names = FALSE, quote=FALSE, sep="," )
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
#write.table(output.df$SampleID..QMUL.or.Genentech., "/home/kgoldmann/Documents/PEAC_eqtl/Data/samples.txt", row.names=FALSE, col.names = FALSE, quote=FALSE, sep="," )
write.table(output.df[1:2], "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
View(output.df)
output.df$fastq1.R1_path[1]
x <- '/mnt/volume1/'
y <- '/home/kgoldmann/NAS/GCPEAC/Katriona/PEAC_sampleinfo.csv'
files = as.character(read.table(x)[, 1]) #list.files(x, full.names = TRUE, recursive=TRUE)
files = list.files(x, full.names = TRUE, recursive=TRUE)
files = files[grepl(".fastq\\.", files)]
samp = rep(NA, length(files))
samp[grepl("Ambry", files)] = lapply(strsplit(files[grepl("Ambry", files)], "/"), "[[", 9)
samp[grepl("Ambry", files)] = lapply(strsplit(gsub(".*\\/", "", files[grepl("Ambry", files)]), "/"), "[[", 9)
samp[grepl("GenentechBatch1", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch1", files)]), "_"), "[[", 2)
samp[grepl("GenentechBatch2", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch2", files)]), "_"), "[[", 1)
samp[grepl("GenentechBatch3", files)] = lapply(strsplit(gsub(".*\\/|_[^_]+$", "", files[grepl("GenentechBatch3", files)]), "_"), "[[", 1)
samp = unlist(samp)
reads = rep(NA, length(files))
reads[grepl("Ambry", files)] = gsub(".fastq.gz", "", lapply(strsplit(gsub(".*L00", "", files[grepl("Ambry", files)]), "_"), "[[", 2))
reads[grepl("GenentechBatch1", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch1", files)])
reads[grepl("GenentechBatch2", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch2", files)])
reads[grepl("GenentechBatch3", files)] = gsub(".*\\_|.fastq.gz", "", files[grepl("GenentechBatch3", files)])
reads = unlist(reads)
temp = data.frame("files" = files, "sample"=samp, "read" = reads)
temp$read[! grepl("R", temp$read)] = paste0("R", temp$read[! grepl("R", temp$read)])
temp$read = droplevels(temp$read)
#rownames(temp) = make.names(temp$sample, unique=T)
meta = read.csv(y)
meta$SampleID..QMUL.ID.only. = gsub("b", "", meta$SampleID..QMUL.ID.only.)
bind.df = meta[,c("HospitalNumber", "SampleID..QMUL.or.Genentech.", "SampleID..QMUL.ID.only.",
"Batch", "Timepoint", "Tissue", "Diagnosis" )]
temp1 = temp[temp$read == "R1", ]
temp2 = temp[temp$read == "R2", ]
output.df = cbind(bind.df, temp1[match(bind.df$SampleID..QMUL.or.Genentech., temp1$sample), "files"],
temp2[match(bind.df$SampleID..QMUL.or.Genentech., temp2$sample), "files"])
#output.df = output.df[! is.na(output.df$files), ]
#output.df
colnames(output.df)[ncol(output.df)] = "fastq1.R2_path"
colnames(output.df)[ncol(output.df)-1] = "fastq1.R1_path"
output.df$fastq1.R1_path[is.na(output.df$fastq1.R1_path)] = temp1$file[match(output.df$SampleID..QMUL.ID.only.[is.na(output.df$fastq1.R1_path)], temp1$sample)]
output.df$fastq1.R2_path[is.na(output.df$fastq1.R2_path)] = temp2$file[match(output.df$SampleID..QMUL.ID.only.[is.na(output.df$fastq1.R2_path)], temp2$sample)]
colnames(output.df)[colnames(output.df) == "HospitalNumber"] = "unique_individual_id"
colnames(output.df)[colnames(output.df) == "SampleID..QMUL.ID.only."] = "ID in vcf"
output.df$"GenotypeDir" = output.df$fastq1.R1_path
output.df$Reads =NA
output.df$Reads[! is.na(output.df$fastq1.R1_path)] = "Single"
output.df$Reads[! is.na(output.df$fastq1.R1_path) & ! is.na(output.df$fastq1.R2_path)] = "Paired"
output.df = output.df[! is.na(output.df$Reads), ]
output.df$fastq2.R1_path = output.df$fastq1.R1_path
output.df$fastq2.R2_path = output.df$fastq1.R2_path
output.df$fastq2.R1_command = paste0("scp cam:", output.df$fastq1.R1_path, "./")
output.df$fastq2.R2_command = paste0("scp cam:", output.df$fastq1.R2_path, "./")
output.df = output.df[, c("SampleID..QMUL.or.Genentech.", "unique_individual_id",
"ID in vcf", "Batch", "Reads", "Timepoint", "Tissue", "Diagnosis",
"GenotypeDir", "fastq1.R1_path", "fastq1.R2_path", "fastq2.R1_command", "fastq2.R2_command")]
output.df = output.df[output.df$Timepoint == "Baseline", ]
output.df = output.df[output.df$Tissue == "Synovium", ]
output.df = output.df[output.df$Batch != "Ambry", ]
output.df = output.df[! is.na(output.df$SampleID..QMUL.or.Genentech.), ]
output.df$al.file = paste("/home/kgoldmann/Documents/PEAC_eqtl/Outputs/STAR/2/", output.df$SampleID..QMUL.or.Genentech., "/Aligned.sortedByCoord.out.bam", sep="")
output.df = output.df[output.df$Reads != "Single", ]
#write.table(output.df$SampleID..QMUL.or.Genentech., "/home/kgoldmann/Documents/PEAC_eqtl/Data/samples.txt", row.names=FALSE, col.names = FALSE, quote=FALSE, sep="," )
write.table(output.df, "/home/kgoldmann/Documents/PEAC_eqtl/Data/RA.csv", row.names=FALSE, col.names = FALSE, quote=FALSE, sep=",")
